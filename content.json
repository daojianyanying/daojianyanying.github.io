{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"https://daojianyanying.github.io","root":"/"},"pages":[{"title":"about","date":"2024-04-22T12:02:21.000Z","updated":"2024-04-22T12:02:21.824Z","comments":true,"path":"about/index.html","permalink":"https://daojianyanying.github.io/about/index.html","excerpt":"","text":""},{"title":"books","date":"2024-04-22T12:01:56.000Z","updated":"2024-04-22T12:01:56.259Z","comments":true,"path":"books/index.html","permalink":"https://daojianyanying.github.io/books/index.html","excerpt":"","text":""},{"title":"links","date":"2024-04-22T12:01:30.000Z","updated":"2024-04-22T12:01:30.298Z","comments":true,"path":"links/index.html","permalink":"https://daojianyanying.github.io/links/index.html","excerpt":"","text":""},{"title":"文章分类","date":"2024-04-22T09:42:47.000Z","updated":"2024-04-22T11:24:21.193Z","comments":true,"path":"categories/index.html","permalink":"https://daojianyanying.github.io/categories/index.html","excerpt":"","text":""},{"title":"repository","date":"2024-04-22T12:00:44.000Z","updated":"2024-04-22T12:00:44.360Z","comments":true,"path":"repository/index.html","permalink":"https://daojianyanying.github.io/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2024-04-22T09:07:23.000Z","updated":"2024-04-22T11:22:39.237Z","comments":true,"path":"tags/index.html","permalink":"https://daojianyanying.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"SonarQube使用","slug":"SonarQube使用","date":"2024-05-26T15:03:34.000Z","updated":"2024-05-26T15:04:20.196Z","comments":true,"path":"2024/05/26/SonarQube使用/","permalink":"https://daojianyanying.github.io/2024/05/26/SonarQube%E4%BD%BF%E7%94%A8/","excerpt":"","text":"环境依赖和链接: sonarqube-9.9：https://www.sonarsource.com/products/sonarqube/downloads/ sonarqube9.9的安装环境说明： https://docs.sonarsource.com/sonarqube/9.9/requirements/prerequisites-and-overview/ sonarscanner-5.0：https://docs.sonarsource.com/sonarqube/9.9/analyzing-source-code/scanners/sonarscanner/ sonarqube插件地址: sonar9.9文档下载: https://docs.sonarsource.com/sonarqube/9.9/setup-and-upgrade/overview/ jdk-17: https://mirrors.huaweicloud.com/openjdk/ PostgreSQL-15：https://www.postgresql.org/download/windows/ 一、Sonar的安装 1.1、安装所选择的版本 1.2、二进制安装 1.2.1、安装jdk-17 1.2.2、安装PSQL-15 1.2.2.1、安装 1.2.2.2、配置 1.2.2.3、psql配置开机自启动 1.2.2.3、psql创建sonar用户 1.2.3、安装sonarqube-9.9 1.2.3.1、下载安装 1.2.3.2、配置和启动 1.2.3.3、登陆 1.2.3.4、基础插件安装(对应LTS-9.9.0的版本) 1.3、docker安装Sonar 1.3.1、docker的安装和配置 1.3.2、docker拉取镜像 1.3.3、docker启动sonar 1.4、k8s安装Sonar 二、Sonar的配置 三、Sonar扫描java代码 四、Sonar扫描C++&#x2F;C代码 五、Sonar扫描go代码 六、Sonar扫描前端代码 七、增量扫描 八、Sonar的api接口 一、Sonar的安装1.1、安装所选择的版本 sonarqube: 9.9LTA jdk: 17 sonar-scanner: 4.7 psql: 15 jenkins： docker: k8s： 1.2、二进制安装1.2.1、安装jdk-171234567891011# 解压软件wget https://mirrors.huaweicloud.com/openjdk/17.0.2/openjdk-17.0.2_linux-x64_bin.tar.gzmkdir -p /usr/local/bin/tar -zxvf openjdk-17.0.2_linux-x64_bin.tar.gz -C /usr/local/bin/# 配置环境变量 在末尾添加元素vim /etc/profile# 在末尾增加内容：# export JAVA_HOME=/usr/local/bin/jdk-17.0.2 # export PATH=$JAVA_HOME/bin:$PATHsource /etc/profile 1.2.2、安装PSQL-151.2.2.1、安装12345678910111213# 使用源码编译的方式安装wget https://ftp.postgresql.org/pub/source/v15.7/postgresql-15.7.tar.gzmkdir -p /tmp/psql/tar -zxvf postgresql-15.7.tar.gz -C /tmp/psql/# 安装依赖yum install -y perl-ExtUtils-Embed readline-devel zlib-devel pam-devel libxml2-devel libxslt-devel openldap-devel python-devel gcc-c++ openssl-devel cmake# 编译源码cd /tmp/psql/postgresql-15.7./configure --prefix=/usr/local/bin/psql15/makemake install# 1.2.2.2、配置1234567891011121314151617181920212223242526# 创建psql的用户和群组groupadd postgresuseradd -g postgres postgresid postgres# 创建psql目录cd /usr/local/bin/psql15/mkdir data &amp;&amp; chown postgres:postgres data# 配置psql的环境变量 vim /home/postgres/.bash_profile #添加如下内容# export PGHOME=/usr/local/bin/psql15/# export PGDATA=/usr/local/bin/psql15/data# PATH=$PATH:$HOME/bin:$PGHOME/bin# 初始化psqlsu - postgresinitdb# 配置psql服务cd /usr/local/bin/psql15/datavim postgresql.conf # listen_addresses = &#x27;*&#x27;vim pg_hba.conf# host all all 0.0.0.0/0 trust 1.2.2.3、psql配置开机自启动1234567891011121314151617181920# 从安装包获取自启动脚本cd /tmp/psql/postgresql-15.7/contrib/start-scriptschmod a+x linuxcp linux /etc/init.d/postgresql# 修改自启动脚本中的psql路径vim /etc/init.d/postgresql# prefix=/usr/local/bin/psql15# PGDATA=&quot;/usr/local/bin/psql15/data&quot;# 添加开机自启动chkconfig --add postgresql# 查看开机自启动chkconfig # postgresql 0:off 1:off 2:on 3:on 4:on 5:on 6:off# 启动服务service postgresql start 1.2.2.3、psql创建sonar用户1234567891011121314151617# 切换用户su - postgrespsql# 创建postgresql的账户(role)create user sonar# 使用template0模板创建sonar数据库create database sonar with encoding &#x27;utf8&#x27; owner sonar template=template0;# 配置sonar角色的密码alter user sonar with password &#x27;sonar&#x27;;# 配置创建数据库权限 管理员权限 创建角色权限alter role sonar createdb; alter role sonar superuser; alter role sonar createrole;# sonar赋仓库权限alter database sonar owner to sonar; 1.2.3、安装sonarqube-9.91.2.3.1、下载安装123456789101112# 下载zip包wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.9.5.90363.zip# 安装解压zip包的软件yum install -y unzipunzip sonarqube-9.9.5.90363.zip -d /usr/local/binmv sonarqube-9.9.5.90363 sonar# 创建用户,不能以root账户启动esuseradd sonarqubegroupadd sonarqube 1.2.3.2、配置和启动123456789101112131415# 设置进程最大同时打开文件数和最大线程数vim /etc/sysctl.conf# 末尾增加 vm.max_map_count=655360sysctl -pvim /etc/security/limits.conf# 末尾增加: * soft nofile 65536# 末尾增加: * hard nofile 65536# 设置为数据库的账户和密码;默认postsql就会生成postgres和密码vim conf/sonar.properties# sonar.jdbc.username=sonar # sonar.jdbc.password=sonar# sonar.jdbc.url=jdbc:postgresql://localhost/sonar 1.2.3.3、登陆123sonarqube默认的账户密码:账户: admin密码: admin 1.2.3.4、基础插件安装(对应LTS-9.9.0的版本) 中文插件:&ensp; sonar-l10n-zh-plugin-9.9.jar(https://github.com/xuhuisheng/sonar-l10n-zh/releases) CXX插件:&ensp; sonar-cxx-plugin-2.1.1.488.jar 多分支插件:&ensp;sonarqube-community-branch-plugin-1.15.0.jar &ensp;&ensp;Sonar插件的安装，下载如上对应Sonarqube-9.9.0的对应版本，将.jar文件放到sonarqube的安装目录的extensions&#x2F;plugins下,重启sonar即可; 如果sonarqube重启失败,则可能是其中的插件存在问题,可以根据日志(logs&#x2F;sonar.log)定位是哪个插件加载的问题。 1.3、docker安装Sonar1.3.1、docker的安装和配置1.3.2、docker拉取镜像1234567891011121314151617181920212223242526272829303132333435363738# 拉取9.9.5LTS版本的镜像root@codehub:~# docker pull sonarqube:9.9.5-community9.9.5-community: Pulling from library/sonarqube4a023cab5400: Pull completedce394e5c05f: Pull completee026920ea2a9: Pull complete70d0df997d9c: Pull completec863a9ccf459: Pull complete720ff7f998d1: Pull completead35aa63843c: Pull complete4f4fb700ef54: Pull completeDigest: sha256:a32ae80ca6b62852a4d170a711f9a4b4aeac9a0c379cefb4b16de1df0fc10641Status: Downloaded newer image for sonarqube:9.9.5-communitydocker.io/library/sonarqube:9.9.5-communityroot@codehub:~## 拉取psql15版本的镜像root@codehub:~# docker pull postgres:15.615.6: Pulling from library/postgresb0a0cf830b12: Pull completeb311dac095c3: Pull complete36163cea98c3: Pull completefe401a45083b: Pull completeb4f63e66f657: Pull complete9a8245430c33: Pull complete74c893d239e5: Pull complete789ed9a95b21: Pull complete5b691e4e12b4: Pull completee502d5360f88: Pull complete0292671f3c2d: Pull complete5247a27db111: Pull completeb3a42a5269c3: Pull complete5fc19b802589: Pull completeDigest: sha256:1ebd963e5c598f944a4e9ba27de4c95289d663dcc73731025aa53c5254094d8fStatus: Downloaded newer image for postgres:15.6docker.io/library/postgres:15.6root@codehub:~# 1.3.3、docker启动sonar123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475# 1. psql的安装root@codehub:/data# mkdir -p /data/psqldata# 创建docker网络root@codehub:/data# docker network create sonarqube# 启动容器root@codehub:/data# docker run --name postgres15 \\--net sonarqube \\-e POSTGRES_PASSWORD=/8520*963.lx \\-p 5432:5432 \\--restart always \\--privileged=true \\-e TZ=Asia/Shanghai \\-v /data/psqldata:/var/lib/postgresql/data \\-v /etc/localtime:/etc/localtime:ro \\-d postgres:15.6# 配置数据库docker exec -it postgres15 /bin/bashpsql -U postgres# 创建postgresql的账户(role)create user sonar;# 使用template0模板创建sonar数据库create database sonar with encoding &#x27;utf8&#x27; owner sonar template=template0;# 配置sonar角色的密码alter user sonar with password &#x27;sonar&#x27;;# 配置创建数据库权限 管理员权限 创建角色权限alter role sonar createdb; alter role sonar superuser; alter role sonar createrole;# sonar赋仓库权限alter database sonar owner to sonar;\\q# 2.sonar安装root@codehub:/data# mkdir -p /data/sonarquberoot@codehub:/data/sonarqube# cd /data/sonarqube/root@codehub:/data/sonarqube# mkdir dataroot@codehub:/data/sonarqube# mkdir configroot@codehub:/data/sonarqube# mkdir logs# 拉取镜像root@codehub:/data/psqldata# docker pull sonarqube:9.9-community9.9-community: Pulling from library/sonarqubeDigest: sha256:a32ae80ca6b62852a4d170a711f9a4b4aeac9a0c379cefb4b16de1df0fc10641Status: Downloaded newer image for sonarqube:9.9-communitydocker.io/library/sonarqube:9.9-communityroot@codehub:/data/sonarqube/data# echo &quot;vm.max_map_count=262144&quot; &gt; /etc/sysctl.confroot@codehub:/data/sonarqube/data# sysctl -pvm.max_map_count = 262144# 配置挂载目录的权限,不设置会导致docker启动sonar的全新问题root@codehub:/data/sonarqube/data# chmod -R 777 /data/sonarqube# 启动镜像root@codehub:/data/sonarqube# docker run -d --name sonarqube9.9 -p 9000:9000 \\--net sonarqube \\--privileged=true \\--restart always \\-e TZ=Asia/Shanghai \\-e SONAR_JDBC_URL=jdbc:postgresql://192.168.17.150:5432/sonar \\-e SONAR_JDBC_USERNAME=sonar \\-e SONAR_JDBC_PASSWORD=sonar \\-v /data/sonarqube/logs:/opt/sonarqube/logs \\-v /data/sonarqube/conf:/opt/sonarqube/conf \\-v /data/sonarqube/data:/opt/sonarqube/data \\-v /data/sonarqube/extensions:/opt/sonarqube/extensions \\-v /etc/localtime:/etc/localtime:ro \\sonarqube:9.9-communityb7d6dea2ce648b1092223f46e82e004fc1bfdddcf81381004accde92f307f0e4# 3.创建容器并运行 1.4、k8s安装Sonar二、Sonar的配置三、Sonar扫描java代码四、Sonar扫描C++&#x2F;C代码五、Sonar扫描go代码六、Sonar扫描前端代码七、增量扫描八、Sonar的api接口","categories":[],"tags":[]},{"title":"代码管理工具(3)-Repo","slug":"代码管理工具-3-Repo","date":"2024-04-22T11:36:37.000Z","updated":"2024-05-07T02:59:10.808Z","comments":true,"path":"2024/04/22/代码管理工具-3-Repo/","permalink":"https://daojianyanying.github.io/2024/04/22/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-3-Repo/","excerpt":"","text":"一、Gerrit二、三、","categories":[{"name":"代码管理","slug":"代码管理","permalink":"https://daojianyanying.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://daojianyanying.github.io/tags/Git/"},{"name":"Repo","slug":"Repo","permalink":"https://daojianyanying.github.io/tags/Repo/"}]},{"title":"linux基础命令-查看","slug":"linux系统基础命令-1-查看","date":"2024-04-22T11:36:37.000Z","updated":"2024-05-06T08:29:36.431Z","comments":true,"path":"2024/04/22/linux系统基础命令-1-查看/","permalink":"https://daojianyanying.github.io/2024/04/22/linux%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4-1-%E6%9F%A5%E7%9C%8B/","excerpt":"","text":"一、CPU信息查看查看CPU的核心数 查看CPU个数 查看CPU线程数 查看CPU的信息 二、内存信息查看三、硬盘信息查看四、查看linux版本","categories":[{"name":"日常","slug":"日常","permalink":"https://daojianyanying.github.io/categories/%E6%97%A5%E5%B8%B8/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://daojianyanying.github.io/tags/linux/"}]},{"title":"代码管理工具(2)-Git","slug":"代码管理工具-2-Git","date":"2024-04-22T11:36:33.000Z","updated":"2024-04-25T07:16:08.395Z","comments":true,"path":"2024/04/22/代码管理工具-2-Git/","permalink":"https://daojianyanying.github.io/2024/04/22/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-2-Git/","excerpt":"","text":"Git的基础使用 说明: Git版本 aaa TortoiseGit版本 Git版本 Git版本 一、Git相关工具的安装二、Git的目录结构和对象模型三、Git的简单命令四、Git的分支合并五、Git中的冲突解决六、Git的分支策略七、","categories":[{"name":"代码管理","slug":"代码管理","permalink":"https://daojianyanying.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://daojianyanying.github.io/tags/Git/"}]},{"title":"代码管理工具(1)-SVN","slug":"代码管理工具-1-SVN","date":"2024-04-22T11:36:28.000Z","updated":"2024-04-25T06:54:23.506Z","comments":true,"path":"2024/04/22/代码管理工具-1-SVN/","permalink":"https://daojianyanying.github.io/2024/04/22/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-1-SVN/","excerpt":"","text":"","categories":[{"name":"代码管理","slug":"代码管理","permalink":"https://daojianyanying.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"}],"tags":[{"name":"代码管理","slug":"代码管理","permalink":"https://daojianyanying.github.io/tags/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"},{"name":"SVN","slug":"SVN","permalink":"https://daojianyanying.github.io/tags/SVN/"}]},{"title":"Web服务端代码管理(3)-VisualSVN","slug":"Web服务端代码管理-3-VisualSVN","date":"2024-04-22T11:36:22.000Z","updated":"2024-04-22T11:38:19.436Z","comments":true,"path":"2024/04/22/Web服务端代码管理-3-VisualSVN/","permalink":"https://daojianyanying.github.io/2024/04/22/Web%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86-3-VisualSVN/","excerpt":"","text":"","categories":[{"name":"代码管理","slug":"代码管理","permalink":"https://daojianyanying.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"}],"tags":[{"name":"代码管理","slug":"代码管理","permalink":"https://daojianyanying.github.io/tags/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"},{"name":"SVN","slug":"SVN","permalink":"https://daojianyanying.github.io/tags/SVN/"},{"name":"VisualSVN","slug":"VisualSVN","permalink":"https://daojianyanying.github.io/tags/VisualSVN/"}]},{"title":"Web服务端代码管理(2)-Gerrit","slug":"Web服务端代码管理-2-Gerrit","date":"2024-04-22T11:35:30.000Z","updated":"2024-05-07T03:37:42.357Z","comments":true,"path":"2024/04/22/Web服务端代码管理-2-Gerrit/","permalink":"https://daojianyanying.github.io/2024/04/22/Web%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86-2-Gerrit/","excerpt":"","text":"一、Gerrit的介绍 二、Gerrit的安装 2.1、linux系统上原生安装 2.1.1、环境版本说明 2.1.2、准备环境 2.1.3、 2.1.4、 2.1.5、 2.2、Docker上安装 2.3、kubernetes上安装 三、Gerrit的使用 四、 一、Gerrit的介绍二、Gerrit的安装2.1、linux系统上原生安装2.1.1、环境版本说明2.1.2、准备环境2.1.3、2.1.4、2.1.5、2.2、Docker上安装2.3、kubernetes上安装三、Gerrit的使用四、","categories":[{"name":"代码管理","slug":"代码管理","permalink":"https://daojianyanying.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://daojianyanying.github.io/tags/Git/"},{"name":"代码管理","slug":"代码管理","permalink":"https://daojianyanying.github.io/tags/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"},{"name":"Gerrit","slug":"Gerrit","permalink":"https://daojianyanying.github.io/tags/Gerrit/"}]},{"title":"Web服务端代码管理(1)-Gitlab","slug":"Web服务端代码管理-1-Gitlab","date":"2024-04-22T11:35:23.000Z","updated":"2024-04-25T03:57:56.591Z","comments":true,"path":"2024/04/22/Web服务端代码管理-1-Gitlab/","permalink":"https://daojianyanying.github.io/2024/04/22/Web%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86-1-Gitlab/","excerpt":"","text":"","categories":[{"name":"代码管理","slug":"代码管理","permalink":"https://daojianyanying.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://daojianyanying.github.io/tags/Git/"},{"name":"Gitlab","slug":"Gitlab","permalink":"https://daojianyanying.github.io/tags/Gitlab/"},{"name":"代码管理","slug":"代码管理","permalink":"https://daojianyanying.github.io/tags/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"}]},{"title":"Hexo搭建个人博客","slug":"个人博客搭建-Hexo","date":"2024-04-21T14:23:44.847Z","updated":"2024-04-25T07:19:31.700Z","comments":true,"path":"2024/04/21/个人博客搭建-Hexo/","permalink":"https://daojianyanying.github.io/2024/04/21/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-Hexo/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"common","slug":"common","permalink":"https://daojianyanying.github.io/categories/common/"}],"tags":[]}],"categories":[{"name":"代码管理","slug":"代码管理","permalink":"https://daojianyanying.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"},{"name":"日常","slug":"日常","permalink":"https://daojianyanying.github.io/categories/%E6%97%A5%E5%B8%B8/"},{"name":"common","slug":"common","permalink":"https://daojianyanying.github.io/categories/common/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://daojianyanying.github.io/tags/Git/"},{"name":"Repo","slug":"Repo","permalink":"https://daojianyanying.github.io/tags/Repo/"},{"name":"linux","slug":"linux","permalink":"https://daojianyanying.github.io/tags/linux/"},{"name":"代码管理","slug":"代码管理","permalink":"https://daojianyanying.github.io/tags/%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/"},{"name":"SVN","slug":"SVN","permalink":"https://daojianyanying.github.io/tags/SVN/"},{"name":"VisualSVN","slug":"VisualSVN","permalink":"https://daojianyanying.github.io/tags/VisualSVN/"},{"name":"Gerrit","slug":"Gerrit","permalink":"https://daojianyanying.github.io/tags/Gerrit/"},{"name":"Gitlab","slug":"Gitlab","permalink":"https://daojianyanying.github.io/tags/Gitlab/"}]}